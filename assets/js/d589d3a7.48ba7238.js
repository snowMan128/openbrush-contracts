"use strict";(self.webpackChunkopenbrush=self.webpackChunkopenbrush||[]).push([[162],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||l[m]||i;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9390:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],u={sidebar_position:1,slug:"/",title:"OpenBrush documentation"},s=void 0,c={unversionedId:"getting-started",id:"getting-started",isDocsHomePage:!1,title:"OpenBrush documentation",description:"Welcome to OpenBrush documentation! This documentation aims to guide you through the usage of OpenBrush library.",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/",permalink:"/",editUrl:"https://github.com/Supercolony-net/openbrush-contracts/tree/main/docs/docs/getting-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/",title:"OpenBrush documentation"},sidebar:"tutorialSidebar",next:{title:"Overview",permalink:"/smart-contracts/overview"}},p=[{value:"What is OpenBrush",id:"what-is-openbrush",children:[]},{value:"Why OpenBrush",id:"why-openbrush",children:[]}],l={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Welcome to OpenBrush documentation! This documentation aims to guide you through the usage of OpenBrush library."),(0,i.kt)("h2",{id:"what-is-openbrush"},"What is OpenBrush"),(0,i.kt)("p",null,"OpenBrush is a library for smart contract development on ink!\nIt provides standard contracts (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/w3f/PSPs"},"based on PSP"),"), as well as useful contracts and macros to help you build ink! smart contracts."),(0,i.kt)("h2",{id:"why-openbrush"},"Why OpenBrush"),(0,i.kt)("p",null,"OpenBrush attempts to analogize OpenZeppelin perfectly with Rust\u2019s paradigm, enabling users to import contracts implemented by another user without problems and reuse the code.\nThere was a need to have a library that can provide base implementations of ERCs and to import/reuse them by customizing their own logic."))}d.isMDXComponent=!0}}]);