name: CI/CD
on:
  pull_request:
    branches: [ main ]
jobs:
  rustfmt:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/supercolony-net/openbrush-contracts-ci
      options: --user root
      credentials:
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}
      env:
        node: /usr/local/bin/node
        CARGO_TARGET_DIR: /usr/local/cache/target
    steps:
      - uses: actions/checkout@v2
      - name: Rustfmt check
        run: cargo fmt --all -- --check
  unit-test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/supercolony-net/openbrush-contracts-ci
      options: --user root
      credentials:
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}
      env:
        node: /usr/local/bin/node
        CARGO_TARGET_DIR: /usr/local/cache/target
    steps:
      - uses: actions/checkout@v2
      - name: Build & Run cargo tests
        run: RUSTFLAGS="-D warnings" cargo test --all-features --workspace
  integration-tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/supercolony-net/openbrush-contracts-ci
      options: --user root
      credentials:
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}
      env:
        node: /usr/local/bin/node
        CARGO_TARGET_DIR: /usr/local/cache/target
    steps:
      - uses: actions/checkout@v2
      - name: Yarn install dependencies
        run: yarn
      - name: Redspot Ğ¡ompile
        run: |
          chown -R root .
          chmod -R a+rwx .
          yarn build:release
      - name: Run Test Mocha
        run: |
          substrate-contracts-node --tmp --dev > /dev/null 2>&1 & P1=$!
          yarn test:mocha & P2=$!
          wait $P2
          kill $P1
